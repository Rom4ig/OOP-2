<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
  </startup>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="Model1"
         connectionString="Data Source=localhost\SQLEXPRESS;initial catalog=Books;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework"
         providerName="System.Data.SqlClient" />
  </connectionStrings>
</configuration>
<!-- //private async void Button_Click(object sender, RoutedEventArgs e)
        //{
        //    if (Name.Text.Equals("") || Email.Text.Equals("") || Password.Password.Equals(""))
        //    {
        //        MessageBox.Show("Нужно заполнить все поля перед добавлением");
        //    }
        //    else
        //    {
        //        var add = new MyEntity
        //        {
        //            Name = Name.Text,
        //            //Course = Course.Text,

        //        };
        //        _db.MyEntities.Add(add);
        //        await _db.SaveChangesAsync();
        //    }
        //    var last = from dict in _db.MyEntities select dict;
        //    Data.DataContext = last.ToList();
        //}
        //private void Button_Click_1(object sender, RoutedEventArgs e)
        //{
        //    var outter = from dict in _db.MyEntities select dict;
        //    Data.DataContext = outter.ToList();
        //}
        //private async void Button_Click_2(object sender, RoutedEventArgs e)
        //{
        //    var p1 = (MyEntity)Data.SelectedItem;
        //    if(p1!=null)
        //    {
        //        _db.MyEntities.Remove(p1);
        //        await _db.SaveChangesAsync();
        //    }
        //    var last = from dict in _db.MyEntities select dict;
        //    Data.DataContext = last.ToList();
        //}
        //private async void Button_Click_3(object sender, RoutedEventArgs e)
        //{
        //    var p1 = (MyEntity)Data.SelectedItem;
        //    if (p1 == null)
        //    {
        //        MessageBox.Show("Нужно выбрать элемент который хотим изменить!");
        //    }
        //    else
        //    {
        //        if (Name.Text.Equals(""))
        //        {
        //            MessageBox.Show("Нужно заполнить поле имени перед изменением");
        //        }
        //        else
        //        {
        //            p1.Name = Name.Text;
        //            await _db.SaveChangesAsync();
        //            var outter = from dict in _db.MyEntities select dict;
        //            Data.DataContext = outter.ToList();
        //        }
        //        if (Email.Text.Equals(""))
        //        {
        //            MessageBox.Show("Нужно заполнить поле перед имэйл изменением");
        //        }
        //        else
        //        {
        //            //p1.Email = Email.Text;
        //            await _db.SaveChangesAsync();
        //            var outter = from dict in _db.MyEntities select dict;
        //            Data.DataContext = outter.ToList();
        //        }
        //        if (Password.Password.Equals(""))
        //        {
        //            MessageBox.Show("Нужно заполнить поле пароля перед изменением");
        //        }
        //        else
        //        {
        //            //p1.Password = Password.Password;
        //            await _db.SaveChangesAsync();
        //            var outter = from dict in _db.MyEntities select dict;
        //            Data.DataContext = outter.ToList();
        //        }
        //    }
        //}

        //private async void Button_Click_4(object sender, RoutedEventArgs e)
        //{
        //    using (var transaction = _db.Database.BeginTransaction())
        //    {
        //        try
        //        {
        //            _db.Database.ExecuteSqlCommand(@"UPDATE dbo.MyEntities SET Email = 'TREK' WHERE Name = 'Влад'");
        //           // _db.MyEntities.Add(new MyEntity { Email = "vladmyr", Name = "Bob", Id=33, Password="9832" });
        //            await _db.SaveChangesAsync();
        //            transaction.Commit();
        //        }
        //        catch (Exception)
        //        {
        //            transaction.Rollback();
        //        }
        //    }
        //    var last = from dict in _db.MyEntities select dict;
        //    Data.DataContext = last.ToList();
        //}
        //private  void Button_Click_5(object sender, RoutedEventArgs e)
        //{
        //    var outter = from dict in _db.MyEntities select dict;
        //    var serch = outter.ToList();
        //    var list = new List<MyEntity>();
        //    foreach (var item in serch)
        //    {
        //        if(item.Name.Contains(Name.Text) && Name.Text.Equals("") != true)
        //        { list.Add(item); continue; }
        //        //if( item.Email.Contains(Email.Text) && Email.Text.Equals("") != true)
        //        //{ list.Add(item); continue; }
        //        //if(item.Password.Contains(Password.Password) && Password.Password.Equals("") != true)
        //        //{ list.Add(item);}
        //    }
        //    if (list.Count > 0)
        //        Data.DataContext = list;
        //    else
        //        MessageBox.Show("Введите информацию для поиска хотя бы в одну из строк!");
        //    var last = from dict in list select dict;
        //    Data.DataContext = last.ToList();
        //}
        //private void Button_Click_6(object sender, RoutedEventArgs e)
        //{
        //    var outter = from dict in _db.MyEntities select dict;
        //    var serch = outter.ToList();
        //    var list = new List<MyEntity>();
        //    //foreach (var item in serch)
        //    //{
        //    //    if ((item.Name.Contains(Name.Text) && !Name.Text.Equals("")) &&
        //    //        (item.Email.Contains(Email.Text) && !Email.Text.Equals("")))
        //    //    { list.Add(item); continue; }
        //    //    if ((item.Email.Contains(Email.Text) && !Email.Text.Equals("")) &&
        //    //        (item.Password.Contains(Password.Password) && !Password.Password.Equals("")))
        //    //    { list.Add(item); continue; }
        //    //    if ((item.Name.Contains(Name.Text) && !Name.Text.Equals("")) &&
        //    //        (item.Password.Contains(Password.Password) && !Password.Password.Equals("")))
        //    //    { list.Add(item); }
        //    //}
        //    if (list.Count > 0)
        //        Data.DataContext = list;
        //    else
        //        MessageBox.Show("Введите информацию для поиска хотя бы в две строки или проверьте корректность ввода!");
        //    var last = from dict in list select dict;
        //    Data.DataContext = last.ToList();
        //}-->